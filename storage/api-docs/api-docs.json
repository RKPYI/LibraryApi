{
    "openapi": "3.0.0",
    "info": {
        "title": "Library Management System API",
        "description": "A comprehensive REST API for managing library operations including books, users, categories, and borrowing workflows. This API provides secure authentication, role-based access control, and complete CRUD operations for all library entities.",
        "termsOfService": "https://example.com/terms",
        "contact": {
            "name": "Library API Support",
            "email": "support@libraryapi.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local Development Server"
        },
        {
            "url": "https://api.librarymanagement.com",
            "description": "Production Server"
        }
    ],
    "paths": {
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "48e49e48019e8b141753cb515a26100b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "operationId": "5db09a35f965c6ca7529ed3c3cae8e21",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "operationId": "8f1a443d39c3bf383f851fbb51253c64",
                "responses": {
                    "204": {
                        "description": "User logged out successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user details",
                "operationId": "1e5f382ba4fa0960d233875cab75a361",
                "responses": {
                    "200": {
                        "description": "User retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get list of books",
                "operationId": "8e67fc126a51598255c56d362d50466e",
                "responses": {
                    "200": {
                        "description": "Books retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Create a new book",
                "operationId": "6c5e00fe01c5e356fa95e728c3cfbc98",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "author",
                                    "published_at",
                                    "isbn"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "The Lord of the Rings"
                                    },
                                    "author": {
                                        "type": "string",
                                        "example": "J.R.R. Tolkien"
                                    },
                                    "published_at": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1954-07-29"
                                    },
                                    "isbn": {
                                        "type": "string",
                                        "example": "978-0-618-64015-7"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A fantasy novel."
                                    },
                                    "cover_image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book created successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/books/{book}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get book details",
                "operationId": "4fd937759f65ce4d38eeee7937a93a11",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book retrieved successfully"
                    },
                    "404": {
                        "description": "Book not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Books"
                ],
                "summary": "Update a book",
                "operationId": "7e2dea68c5c8e98bc212b57acea73f06",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "The Lord of the Rings"
                                    },
                                    "author": {
                                        "type": "string",
                                        "example": "J.R.R. Tolkien"
                                    },
                                    "published_at": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1954-07-29"
                                    },
                                    "isbn": {
                                        "type": "string",
                                        "example": "978-0-618-64015-7"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A fantasy novel."
                                    },
                                    "cover_image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Book updated successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete a book",
                "operationId": "1870d5221f34fa03e3ece095b7bf2b63",
                "parameters": [
                    {
                        "name": "book",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Book deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Book not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/books/search": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Search for books",
                "operationId": "1b5f924a84be4bd1ca201ed19c175911",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Books retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/borrows": {
            "get": {
                "tags": [
                    "Borrows"
                ],
                "summary": "Get list of borrows",
                "operationId": "68be1687c1c822f1907d8a6b5094a562",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "borrowed",
                                "overdue",
                                "returned",
                                "cancelled",
                                "return_requested",
                                "return_rejected"
                            ]
                        }
                    },
                    {
                        "name": "book_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Borrow records retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Borrows"
                ],
                "summary": "Request a borrow (Member action)",
                "operationId": "06257fab65385cdb55c976d5ff5d53d4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "book_id"
                                ],
                                "properties": {
                                    "book_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "I would like to borrow this book."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Borrow record created successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/borrows/{borrow}": {
            "get": {
                "tags": [
                    "Borrows"
                ],
                "summary": "Get borrow details",
                "operationId": "434fbf8e0693c4da9937dc7f00e51650",
                "parameters": [
                    {
                        "name": "borrow",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Borrow record retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Borrow not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Borrows"
                ],
                "summary": "Approve a borrow (Admin action)",
                "operationId": "c10d01bcac1a3c850309b60a733e91dd",
                "parameters": [
                    {
                        "name": "borrow",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-07-23"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Approved"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Borrow record updated successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Borrow not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Borrows"
                ],
                "summary": "Delete a borrow record (Admin action)",
                "operationId": "c2daf0fa54ce27a38d6e3e2fe3f2c022",
                "parameters": [
                    {
                        "name": "borrow",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Borrow record deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Borrow not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/borrows/{borrow}/reject": {
            "put": {
                "tags": [
                    "Borrows"
                ],
                "summary": "Reject & Cancel a borrow",
                "operationId": "9e5f5b017858bbb894348fd1b35e50bd",
                "parameters": [
                    {
                        "name": "borrow",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notes": {
                                        "type": "string",
                                        "example": "Rejected due to some reason."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Borrow request rejected successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Borrow not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/borrows/overdue": {
            "get": {
                "tags": [
                    "Borrows"
                ],
                "summary": "Get overdue borrows",
                "operationId": "a1e068b9294ef7d43bd4957ad8193710",
                "responses": {
                    "200": {
                        "description": "Overdue borrow records retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/returns/{borrow}/request": {
            "post": {
                "tags": [
                    "Returns"
                ],
                "summary": "Request to return a book",
                "operationId": "94f5f3861713e16c0ff0c8d2194241df",
                "parameters": [
                    {
                        "name": "borrow",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notes": {
                                        "type": "string",
                                        "example": "Returning the book."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return request submitted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Borrow not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/returns/{borrow}/approve": {
            "put": {
                "tags": [
                    "Returns"
                ],
                "summary": "Approve a book return (Admin action)",
                "operationId": "b28b2b7f878b607edffc581e992e4c79",
                "parameters": [
                    {
                        "name": "borrow",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notes": {
                                        "type": "string",
                                        "example": "Return approved."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return approved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Borrow not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/returns/{borrow}/reject": {
            "put": {
                "tags": [
                    "Returns"
                ],
                "summary": "Reject a book return (Admin action)",
                "operationId": "0b4ffb0bacf95b87925b20f34441fc19",
                "parameters": [
                    {
                        "name": "borrow",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "notes": {
                                        "type": "string",
                                        "example": "Return rejected."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Return rejected successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Borrow not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "operationId": "d9bf255011b42d56bf306832dc3366c8",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "cc8c3a3908a8b33010785820dbe9906f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Fiction"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Fictional books"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/categories/{category}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category details",
                "operationId": "4c76b0371fab94c0ed693be4ff75b5d2",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "operationId": "50056e84d9bb2ec97f8e21547ce8cb48",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Fiction"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Fictional books"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "3361aeb5a94a03ecf24643e5c3472037",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users (Admin only)",
                "operationId": "3ab81e3f9b24b4f36ab08d72349ac632",
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user details",
                "operationId": "daaf7a6169ee9348c3fddb07778598ff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "operationId": "59e98fba99e974815e27979dd58e2175",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "member",
                                            "admin"
                                        ],
                                        "example": "member"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "operationId": "c30c64b8b7730b65c7714c9af4a6f5fa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "member"
                        ],
                        "example": "member"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Book": {
                "title": "Book",
                "description": "Book model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "The Great Gatsby"
                    },
                    "author": {
                        "type": "string",
                        "example": "F. Scott Fitzgerald"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "978-0-7432-7356-5"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date",
                        "example": "1925-04-10"
                    },
                    "description": {
                        "type": "string",
                        "example": "A classic American novel",
                        "nullable": true
                    },
                    "cover_image": {
                        "type": "string",
                        "example": "https://example.com/covers/book1.jpg",
                        "nullable": true
                    },
                    "stock": {
                        "type": "integer",
                        "example": 5
                    },
                    "available_stock": {
                        "type": "integer",
                        "example": 3
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Fiction"
                    },
                    "description": {
                        "type": "string",
                        "example": "Fictional literature and novels",
                        "nullable": true
                    },
                    "books_count": {
                        "type": "integer",
                        "example": 15
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Borrow": {
                "title": "Borrow",
                "description": "Borrow model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "book_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "borrowed",
                            "overdue",
                            "returned",
                            "cancelled",
                            "return_requested",
                            "return_rejected"
                        ],
                        "example": "borrowed"
                    },
                    "requested_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "approved_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-02-15",
                        "nullable": true
                    },
                    "returned_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "notes": {
                        "type": "string",
                        "example": "Research project",
                        "nullable": true
                    },
                    "admin_notes": {
                        "type": "string",
                        "example": "Approved",
                        "nullable": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "book": {
                        "$ref": "#/components/schemas/Book"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ApiResponse": {
                "title": "API Response",
                "description": "Standard API response format",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation successful"
                    },
                    "data": {
                        "description": "Response data",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ApiErrorResponse": {
                "title": "API Error Response",
                "description": "Standard API error response format",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Error description"
                    },
                    "errors": {
                        "description": "Validation errors",
                        "type": "object",
                        "example": {
                            "field_name": [
                                "Specific validation error"
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "PaginatedResponse": {
                "title": "Paginated Response",
                "description": "Paginated response format",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Data retrieved successfully"
                    },
                    "data": {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "type": "object"
                                }
                            },
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 5
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 75
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AuthResponse": {
                "title": "Authentication Response",
                "description": "Authentication response with user and token",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Login successful"
                    },
                    "data": {
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            },
                            "token": {
                                "type": "string",
                                "example": "1|abcdefghijklmnopqrstuvwxyz123456789"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "BookCreateRequest": {
                "title": "Book Create Request",
                "description": "Request body for creating a book",
                "required": [
                    "title",
                    "author",
                    "published_at",
                    "isbn"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "The Great Gatsby"
                    },
                    "author": {
                        "type": "string",
                        "example": "F. Scott Fitzgerald"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "978-0-7432-7356-5"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date",
                        "example": "1925-04-10"
                    },
                    "description": {
                        "type": "string",
                        "example": "A classic American novel"
                    },
                    "cover_image": {
                        "description": "Book cover image file",
                        "type": "string",
                        "format": "binary"
                    },
                    "stock": {
                        "type": "integer",
                        "example": 5
                    },
                    "categories": {
                        "description": "Array of category IDs",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1,
                            2
                        ]
                    }
                },
                "type": "object"
            },
            "BookUpdateRequest": {
                "title": "Book Update Request",
                "description": "Request body for updating a book",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "The Great Gatsby"
                    },
                    "author": {
                        "type": "string",
                        "example": "F. Scott Fitzgerald"
                    },
                    "isbn": {
                        "type": "string",
                        "example": "978-0-7432-7356-5"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date",
                        "example": "1925-04-10"
                    },
                    "description": {
                        "type": "string",
                        "example": "A classic American novel"
                    },
                    "cover_image": {
                        "description": "Book cover image file",
                        "type": "string",
                        "format": "binary"
                    },
                    "stock": {
                        "type": "integer",
                        "example": 5
                    },
                    "categories": {
                        "description": "Array of category IDs",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1,
                            2
                        ]
                    }
                },
                "type": "object"
            },
            "CategoryRequest": {
                "title": "Category Request",
                "description": "Request body for creating/updating a category",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Fiction"
                    },
                    "description": {
                        "type": "string",
                        "example": "Fictional literature and novels"
                    }
                },
                "type": "object"
            },
            "BorrowRequest": {
                "title": "Borrow Request",
                "description": "Request body for borrowing a book",
                "required": [
                    "book_id"
                ],
                "properties": {
                    "book_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "notes": {
                        "type": "string",
                        "example": "I need this book for my research project"
                    }
                },
                "type": "object"
            },
            "BorrowApprovalRequest": {
                "title": "Borrow Approval Request",
                "description": "Request body for approving a borrow",
                "properties": {
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-02-15"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Approved. Please return by due date."
                    }
                },
                "type": "object"
            },
            "ReturnRequest": {
                "title": "Return Request",
                "description": "Request body for return operations",
                "properties": {
                    "notes": {
                        "type": "string",
                        "example": "Returning the book in good condition"
                    }
                },
                "type": "object"
            },
            "UserUpdateRequest": {
                "title": "User Update Request",
                "description": "Request body for updating user information",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "member",
                            "admin"
                        ],
                        "example": "member"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Login Request",
                "description": "Request body for user login",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Register Request",
                "description": "Request body for user registration",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum authentication. Use the token received from login endpoint.",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and authorization endpoints"
        },
        {
            "name": "Books",
            "description": "Book management operations including search and categorization"
        },
        {
            "name": "Categories",
            "description": "Book category management operations"
        },
        {
            "name": "Users",
            "description": "User management operations (Admin only)"
        },
        {
            "name": "Borrows",
            "description": "Book borrowing workflow management including requests and approvals"
        },
        {
            "name": "Returns",
            "description": "Book return workflow management including requests and approvals"
        }
    ]
}